#include <stdio.h>

#include <stdlib.h int a[20][20].q[20].visited[20].reach[10].n.ij. 0.r-1.count 0:

void bfs(int v)

{

for(i=1;i<=n;i++)

ifta[v][i] && !visited[i])

if(ft)

bts

visited[q[f]] 1: bfs(q[f++]);

a Visited 20th Teach [10]am nf Count:0 ISE

void dfs(int v)

int i;

reach[v] 1:

forti ;i<n;i++)

if(a[v][i] && !reach[i])

printf("\n %d-%d",v.i):

count++: dfs(i);

1

void main()

Vertices & juice

int v, choice: printf("\n Enter the number of vertices:"); scanf("%d",&n).

for(i=0;i<=n;i++){
q[i]=0;
visited [i]=0;
}

for(i=0;i<=n-1;i++)
reach(i)=0;

printfn Enter graph data in matrix form:\n");

scanf Aalill

printf("L.BFS in 2.DFS\n 3.Esit\n"); scanf("%d",&choice).

switch(choice)

case 1: printf("\n Enter the starting vertex:"); scanf("%d",&v); bis(v):

Bill

if((v<1)||(v>n))

printf("\n Bfs is not possible");

else

printf("\n The nodes which are reachable from %d\n",v):

for(i=1;i<n;i++)

if(visited[i]) printf("%d-%d\t",v.i);

break

case 2:1fs(1).

if(count-n-1)

printf("\n Graph is connected");

else

printf("in Graph is not connected"). break:

case 3: exit(0);
